---
- name: '[homebrew] Include variables for homebrew packages and casks installation'
  include_vars: homebrew.yml

# CASK
- name: '[homebrew] Install configured cask applications'
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ macos_setup_homebrew_cask_appdir }}"
  with_items: "{{ macos_setup_homebrew_cask_apps }}"
  # Universal way to specify environment variables for task (can also be playbook-wide):
  #environment:
  #  HOMEBREW_CASK_OPTS: '--appdir=~/Applications --fontdir=/Library/Fonts'

- name: '[homebrew] remove all blacklisted cask applications'
  homebrew_cask:
    name: "{{ item }}"
    state: absent
    install_options: "appdir={{ macos_setup_homebrew_cask_appdir }}"
  with_items: "{{ macos_setup_homebrew_uninstalled_cask_apps }}"

# BREW
- name: '[homebrew] Ensure configured homebrew packages are installed'
  homebrew:
    name: "{{ item.pkg }}"
    #name: "{{ item.name | default(item) }}"
    install_options: "{{ item.install_opts }}"
    #install_options: "{{ item.install_options | default(omit) }}"
    state: present
  with_items: "{{ macos_setup_homebrew_installed_packages }}"

- name: '[homebrew] Ensure blacklisted homebrew packages are not installed'
  homebrew: "name={{ item }} state=absent"
  with_items: "{{ macos_setup_homebrew_uninstalled_packages }}"

- name: '[homebrew] Upgrade all homebrew packages (if configured)'
  homebrew: update_homebrew=yes upgrade_all=yes
  when: macos_setup_homebrew_upgrade_all_packages

- name: '[homebrew] Check for Brewfile'
  stat:
    path: "{{ macos_setup_homebrew_brewfile_dir }}/Brewfile"
  register: macos_setup_brewfile

- name: '[homebrew] Install from Brewfile'
  command: "brew bundle chdir={{ macos_setup_homebrew_brewfile_dir }}"
  when: macos_setup_brewfile.stat.exists and macos_setup_homebrew_use_brewfile
...
